name: Build & Deploy

on:
  push:
    branches: [master]
    paths:
      - "**/Cargo.lock"
      - "**/*.rs"
      - ".github/workflows/build-deploy.yaml"

jobs:
  build:
    name: "Build & Deploy Project"
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install rust nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly

      - uses: Swatinem/rust-cache@v1

      - name: Bump version
        id: ver
        uses: paulhatch/semantic-version@v4.0.2
        with:
          tag_prefix: "v"
          bump_each_commit: true

      - name: Build rust project
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=x86_64-unknown-linux-gnu

      - name: Prepare binary
        run: |
          mkdir bin
          cp target/x86_64-unknown-linux-gnu/release/sar-blog bin/sar-blog-x86_64-unknown-linux-gnu
          sha256sum -b bin/sar-blog-x86_64-unknown-linux-gnu > bin/sar-blog-x86_64-unknown-linux-gnu.sha256
          cat bin/sar-blog-x86_64-unknown-linux-gnu.sha256

      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: built-binary
          path: bin/sar-blog-x86_64-unknown-linux-gnu

      - name: Test binary
        run: |
          bin/sar-blog-x86_64-unknown-linux-gnu --test

      - name: Release binary
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.ver.outputs.version_tag }}
          commit: ${{ env.GITHUB_SHA }}
          artifacts: "bin/sar-blog-x86_64-unknown-linux-gnu,bin/sar-blog-x86_64-unknown-linux-gnu.sha256"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Identity
        run: echo "${{ secrets.SSH_KEY }}" > ssh_key && chmod 400 ssh_key

      - name: Deploy binary
        run: >
          scp \
            -i ssh_key \
            -o LogLevel=ERROR \
            -o StrictHostKeyChecking=no \
            target/x86_64-unknown-linux-gnu/release/sar-blog $SSH_USER@$SSH_HOSTNAME:$WORK_DIR/bin/sar-blog
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOSTNAME: ${{ secrets.SSH_HOSTNAME }}
          WORK_DIR: ${{ secrets.PROJECT_DIR }}

      - name: Restart Service
        run: >
          ssh $SSH_USER@$SSH_HOSTNAME \
            -o StrictHostKeyChecking=no \
            -o LogLevel=ERROR \
            -i ssh_key \
            "cd $WORK_DIR && \
            docker-compose down --rmi local && \
            docker-compose build --no-cache && \
            docker-compose up -d"
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOSTNAME: ${{ secrets.SSH_HOSTNAME }}
          WORK_DIR: ${{ secrets.PROJECT_DIR }}
